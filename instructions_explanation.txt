#0 //31 stores 1
001000_11111_11111_0000000000000001

#1 //0 stores n-1
100100_00000_00000_0000000000000000

001000_00000_00000_0000000000000100

// 2 stores i 
// 3 stores j

----------------------------------------------------
outer_loop:

#2 //4 stores n-i-1
000000_00000_00010_00100_00000_100010

#3 //move j to 0
000000_00011_00011_00011_00000_100010
------------------------------------------
inner_loop:

#4 //5 stores j+1
001000_00011_00101_0000000000000001

#5 //6 stores Data[j]
100011_00011_00110_0000000000000000

#6 //7 stores Data[j+1]
100011_00101_00111_0000000000000000

#7 //8 stores Data[j] < Data[j+1]
000000_00110_00111_01000_00000_101010

#8 //jump to inner loop condition if R[8] = 1
000100_11111_01000_0000000000001011

#9 //store data[j+1] to data[j]
101100_00011_00111_0000000000000000

#10 //store data[j] to data[j+1]
101100_00101_00110_0000000000000000

inner_loop_condition:

#11 // j = j + 1
001000_00011_00011_0000000000000001

#12 // 9 stores j < n-i-1
000000_00011_00100_01001_00000_101010

#13 // move to outer loop condition if R[9] != 1
000101_11111_01001_0000000000001111

#14 // jump to inner loop
000010_00000000000000000000000100

outer_loop_condition:

#15 // i = i + 1
001000_00010_00010_0000000000000001

#16 // 10 stores i < n-1
000000_00010_00000_01010_00000_101010

#17 // move to outer loop if R[10] = 1
000100_11111_01010_0000000000000010



